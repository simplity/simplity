<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">
<!-- 
	This is an example of web-xml set-up for the dummy sso server.
 -->
    <context-param>
    <description>name of the cookie set by sso utility for the domain</description>
      <param-name>sso-cookie-name</param-name>
    <param-value>ssotoken</param-value>
  </context-param>
<!--  following are for sso client --> 
   
  <context-param>
    <description>url to which we send a get request, after appending toekn and ip to validate whwther the token is valid for the ip</description>
      <param-name>sso-validation-url</param-name>
    <param-value>http://localhost:8080/sso-server/validate?app-name=sso-client&amp;app-password=myPassWorD</param-value>
  </context-param>
    
  <context-param>
    <description>qry field name with which token is appended to sso-validation-url</description>
      <param-name>sso-qry-name-for-token</param-name>
    <param-value>ssotoken</param-value>
  </context-param>
    
    <context-param>
    <description>qry field name with which ip-address is appended to sso-validation-url</description>
        <param-name>sso-qry-name-for-ip</param-name>
    <param-value>ip</param-value>
  </context-param>
    
    <context-param>
    <description>field name in the response body that indicates status of authentication</description>
        <param-name>sso-status-field-name</param-name>
    <param-value>status</param-value>
  </context-param>
    
    <context-param>
    <description>value of sso-status-field-name that indicates that the user is successfully authenticated</description>
        <param-name>sso-status-success</param-name>
    <param-value>0</param-value>
  </context-param>
    
    <context-param>
    <description>field name in which error message is returned in case authentcation fails</description>
        <param-name>sso-message-field-name</param-name>
    <param-value>message</param-value>
  </context-param>
    
    <context-param>
    <description>page to which request is redirected in case of any internal error during sso</description>
        <param-name>sso-error-page</param-name>
    <param-value>error.htm</param-value>
  </context-param>
    
    <context-param>
    <description>requests that should be granted access without check. Should be set after well-thougt-thru security considerations. comma separated list.</description>
        <param-name>sso-whitelisted-resources</param-name>
    <param-value>module1/report.jsp;mdule2/report3.jsp</param-value>
  </context-param>
    
    <context-param>
    <description>if whitelisted reources are used, you shoudl restrict those requests to known ips as a security measure</description>
        <param-name>sso-whitelisted-ips</param-name>
    <param-value>127.0.0.1;234.125.34.45</param-value>
  </context-param>
    
    <context-param>
    <description>url to initiate login on the sso server. we append call-back url before redirecting to this url</description>
        <param-name>sso-login-url</param-name>
    <param-value>HTTP://localhost:8080/sso-server/login</param-value>
  </context-param>
    
    <context-param>
    <description>name of query field in which callback url is to be appended to login-url</description>
        <param-name>sso-qry-name-for-callback</param-name>
    <param-value>url</param-value>
  </context-param>
 
 <!-- parameters to set up a dummy sso server -->   
    <context-param>
    <description>domain scope of sso cookie</description>
        <param-name>sso-domain-name</param-name>
    <param-value>localhost</param-value>
  </context-param>
    
    <context-param>
    <description>in seconds</description>
        <param-name>sso-cookie-life</param-name>
    <param-value>144000</param-value>
  </context-param>
    
    <context-param>
    <description>fields other than status and message that the sso server is to send values for</description>
        <param-name>sso-field-names</param-name>
    <param-value>userId,orgUnit</param-value>
  </context-param>
    
    <context-param>
    <description>valid users with values of fields for them</description>
        <param-name>sso-user-data</param-name>
    <param-value>manager:man-age-r,head-office;director:direct-or,home;assistant:ass-is-tent,tent</param-value>
  </context-param>
    
  <servlet>
    <servlet-name>Startup</servlet-name>
    <servlet-class>org.simplity.sso.Startup</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  
  <!--  filter for sso client -->
  <!-- 
  <filter>
      <filter-name>AFilter</filter-name>
      <filter-class>org.simplity.AFilter</filter-class>
  </filter>

  <filter-mapping>
      <filter-name>AFilter</filter-name>
      <url-pattern>/*</url-pattern>
  </filter-mapping>
 -->
<!--   servliet mapping for dummy server -->  

  <servlet>
    <servlet-name>Login</servlet-name>
    <servlet-class>org.simplity.sso.DummySsoLogin</servlet-class>
  </servlet>

  <servlet>
    <servlet-name>Authenticate</servlet-name>
    <servlet-class>org.simplity.sso.DummySsoServer</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>Authenticate</servlet-name>
    <url-pattern>/validate</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>Login</servlet-name>
    <url-pattern>/login</url-pattern>
  </servlet-mapping>
</web-app>